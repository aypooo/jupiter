Numpy
-zeros()
괄호 안의 숫자만큼 0의 원소를 생성, 초기화
array = np.zeros(3)
array = np.zeros((4,3))// 0으로 초기화된 (4x3), 2차원 배열
array +=4 // 전체 0에 4를 더함
-ones()
배열을 1로 채움
-mean()
배열에 저장된 원소들의 평균
-shape
기본속성 출력
-array()
원소 입력시 반드시 리스트 형식으로 입력
x = np.arry([1,3,5])

-reshape()
배열을 원하는 모양으로 생성(2차원 배열로 묶어준다)
np.array([1,3,5,7,9,11]).reshape(3,2)
[[1 3]
 [5 7]
 [9 11]]

-슬라이싱
각각의 원소의 특정 인덱스에 '일괄적'으로 접근 가능
numpy 형식의 리스트에 슬라이싱으로 접근(인덱스는 반드시 정수나 슬라이스)
array = [[1,11],[2,12],[3,13]]
array[:,1]// 각 배열의 1번을 출력
[11 12 13]


-2개 배열의 연산
2개 배열의 인덱스별로 사칙연산 가능
x = np.ary([1,2,3])
y = np.ary([4,5,6])
z = x*y
[4 10 18]

x[:,1]+y[:1]
[7]

-배열에 덧셈
s = np.ary([1,2,3])
t = s+1
[2 3 4]

-squt()
제곱근(정수형 배열에도 적용가능)

-transpose()
주대각선(백슬래쉬)을 기준으로 행렬 값들을 치환
ary = [[1,2],[3,4]] 
ary.transpose()
[[1 3]
 [2 4]]
-random()
0에서 입력값만큼 무작위의 수를 생성
-all()
모든원소가 조건을 만족하면 True, 아니면 False
-any()
조건을 만족하는 원소가 있으면 True, 아니면 False

-linspace()
시작과 끝의 값을 지정하고 그 사이의 값을 균등배분
np.linspace(0,12,4)
[0,4,8,12]

-logspace()
로그 형태의 간격으로 나누어진 원소들을 배열로 생성